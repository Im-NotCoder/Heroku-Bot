from pyrogram import filters, Client
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

import config
import random

from config import START_IMAGES, OWNER

from PURVIBOTS import app



@app.on_message(filters.command(["start"]))
async def start(client: Client, message):
    user_mention = message.from_user.mention  # user mention
    random_image = random.choice(START_IMAGES)  

    buttons = InlineKeyboardMarkup([
        [InlineKeyboardButton("·¥Ä ô·¥è·¥ú·¥õ  ô·¥è·¥õ", callback_data="about")],
        [
            InlineKeyboardButton("·¥è·¥°…¥·¥á Ä", user_id=OWNER),
            InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/purvi_support")
        ]
    ])

    await message.reply_photo(
        photo=random_image,
        caption=f"**‡πè  ú·¥á ü ü·¥è {user_mention} !!**\n\n**‡πè …™ ·¥Ä·¥ç ·¥Ä  ú·¥á Ä·¥ã·¥è·¥ú ·¥Ñ·¥è…¥·¥õ Ä·¥è ü ü·¥á Ä  ô·¥è·¥õ. …™ ·¥Ñ·¥Ä…¥ ·¥á·¥Äs…™ ü è ·¥Ñ·¥è…¥·¥õ Ä·¥è ü  ú·¥á Ä·¥ã·¥è·¥ú ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ & ·¥Ä·¥ò·¥òs ü§ñ**\n\n**‡πè ·¥Ñ ú·¥á·¥Ä·¥ã ·¥Ä ô·¥è·¥ú·¥õ  ô·¥ú·¥õ·¥õ·¥è…¥ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs.**",
        reply_markup=buttons
    )

@app.on_callback_query(filters.regex("about"))
async def about_callback(client: Client, query: CallbackQuery):
    buttons = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/purvi_support"),
            InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/PURVI_UPDATES")
        ],
        [InlineKeyboardButton(" ô·¥Ä·¥Ñ·¥ã", callback_data="back_to_start")]
    ])

    await query.message.edit_text(
        "**‡πè ·¥Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç  ô·¥è·¥õ “ì·¥è Ä ·¥Ñ·¥è…¥·¥õ Ä·¥è ü  ú·¥á Ä·¥ã·¥è·¥ú ·¥Ä·¥ò·¥òs. ·¥° Ä…™·¥õ·¥õ·¥á…¥ …™…¥ [·¥ò è·¥õ ú·¥è…¥](https://www.python.org/)  ú·¥á ü·¥ò ·¥°…™·¥õ ú [·¥ò è Ä·¥è…¢ Ä·¥Ä·¥ç](https://github.com/pyrogram/pyrogram).**\n\n**<u>‡πè s·¥è·¥ç·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö :-</u>**\n\n**/start :- s·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ.**\n**/help :- ·¥Ñ ú·¥á·¥Ä·¥ã  ô·¥è·¥õs  ú·¥á ü·¥ò.**\n\n**<u>‡πè ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö :-</u>**\n\n**/myhost :- ·¥Ñ·¥è…¥·¥õ Ä·¥è ü ·¥Ä·¥ò·¥òs.**\n**/host :-  ú·¥ès·¥õ …¥·¥á·¥° ·¥Ä·¥ò·¥ò.**\n\n**‡πè ·¥ä·¥è…™…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ “ì·¥è Ä …¥·¥á·¥° ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás.**",
        reply_markup=buttons
    )

@app.on_callback_query(filters.regex("back_to_start"))
async def back_to_start(client: Client, query: CallbackQuery):
    user_mention = query.from_user.mention

    buttons = InlineKeyboardMarkup([
        [InlineKeyboardButton("·¥Ä ô·¥è·¥ú·¥õ  ô·¥è·¥õ", callback_data="about")],
        [
            InlineKeyboardButton("·¥è·¥°…¥·¥á Ä", user_id=OWNER),
            InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/purvi_support")
        ]
    ])

    await query.message.edit_text(
        f"**‡πè  ú·¥á ü ü·¥è {user_mention} !!**\n\n**‡πè …™ ·¥Ä·¥ç ·¥Ä  ú·¥á Ä·¥ã·¥è·¥ú ·¥Ñ·¥è…¥·¥õ Ä·¥è ü ü·¥á Ä  ô·¥è·¥õ. …™ ·¥Ñ·¥Ä…¥ ·¥á·¥Äs…™ ü è ·¥Ñ·¥è…¥·¥õ Ä·¥è ü  ú·¥á Ä·¥ã·¥è·¥ú ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ & ·¥Ä·¥ò·¥òs ü§ñ**\n\n**‡πè ·¥Ñ ú·¥á·¥Ä·¥ã ·¥Ä ô·¥è·¥ú·¥õ  ô·¥ú·¥õ·¥õ·¥è…¥ “ì·¥è Ä ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs.**",
        reply_markup=buttons
    )
